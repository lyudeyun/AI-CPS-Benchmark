function nb_new = CountRefine(P0,delta)
%COUNTREFINE counts the number of points that would be generated by the
% same call to Refine
% 
% Synopsis: nb_new = CountRefine(P0, delta)
% 
% Inputs:
%   - P0    : is a parameter set which may contain many parameter vectors
%   - delta : is a vector of dimension numel(P0.dim) x 1. It also may be a
%             scalar. In this case, it is interpreted as a column vector
%             with all components equal to its value. The ith line
%             corresponds to the ith parameter in P0.dim. Its values can be
%             either integers or reals. If they are integers, P has
%             delta(i) points in dimension i. If they are real (ie:
%             any(floor(delta)~=delta) is true), then delta is interpreted
%             as a distance and P is divided into points that are at
%             distance delta from one another. If any value in delta in
%             lower or equal to 0, P0 is answered.
% 
% Output:
%   - nb_new : 
% 
%See also Refine
%

% check delta
if(all(delta==1) || any(delta<=0))
    nb_new = P0;
    return;
end

if isscalar(delta)
    delta = delta*ones(numel(P0.dim),1);
elseif(size(delta,1)==1)
    delta=delta';
end

if(numel(delta)>numel(P0.dim))
    delta = delta(P0.dim);
end;

nb_new = 0;

for ii = 1:size(P0.pts,2)
    deltai=delta;
    
    if sum(abs(deltai-floor(deltai))) % if delta contains reals
        % we compute how many points will be generated in each dimension
        deltai(deltai>2*P0.epsi(:,ii)) = 2*P0.epsi(deltai>2*P0.epsi(:,ii));
        deltai = ceil(2*P0.epsi(:,ii)./deltai);
    end
    
    nb_new = nb_new+prod(deltai);
end

end
