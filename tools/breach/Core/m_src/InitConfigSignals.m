function configs = InitConfigSignals

configs = {};
timeHorizon = 20;
%%
const_signal = struct(...
    'name', 'constant', ...
    'stepSize' , 0.1, ...
    'timeHorizon', timeHorizon, ...
    'value_range', struct('lower', -10, 'upper', 10));
configs{end+1} = const_signal;

%%
rising_edge_signal = struct(...
    'name', 'rising_edge', ...
    'stepSize' , .1, ...
    'timeHorizon', timeHorizon, ...    
    'value_range', struct('lower', 0, 'upper', 10), ...
    'min_amplitude', struct('lower', 3, 'upper', 5), ...
    'edge_time', struct('lower', 2, 'upper', 5));
configs{end+1} = rising_edge_signal;

%%
falling_edge_signal = struct(...
    'name', 'falling_edge', ...
    'stepSize' , .1, ...
    'timeHorizon', timeHorizon, ...
    'value_range', struct('lower', 0, 'upper', 10), ...
    'min_amplitude', struct('lower', 3, 'upper', 5), ...
    'edge_time', struct('lower', 2, 'upper', 5));
configs{end+1} = falling_edge_signal;

%%
multi_edge_signal = struct(...
    'name', 'multi_edge_double', ...
    'stepSize' , 0.1, ...
    'timeHorizon', timeHorizon, ...
    'value_range', struct('lower', 0, 'upper', 10),...
    'num_edges', 5);
configs{end+1} = multi_edge_signal;

%%
multi_edge_boolean_signal = struct(...
    'name', 'multi_edge_boolean', ...
    'stepSize' , 0.1, ...
    'timeHorizon', timeHorizon, ...
    'value_range', struct('lower', 0, 'upper', 10),...
    'num_edges', 5);
configs{end+1} = multi_edge_boolean_signal;

%%
monotonic_ascending_signal = struct(...
    'name', 'monotonic_ascending', ...
    'stepSize' , .1, ...
    'timeHorizon', timeHorizon, ...
    'value_range', struct('lower', 0, 'upper', 10));
configs{end+1} = monotonic_ascending_signal;

%%
monotonic_descending_signal = struct(...
    'name', 'monotonic_descending', ...
    'stepSize' , .1, ...
    'timeHorizon', timeHorizon, ...
    'value_range', struct('lower', 0, 'upper', 10));
configs{end+1} = monotonic_descending_signal;

%%
exponentially_decreasing_signal = struct(...
    'name', 'exponentially_decreasing', ...
    'stepSize' , .1, ...
    'timeHorizon', timeHorizon, ...
    'value_range', struct('lower', 0, 'upper', 10),...
    'min_amplitude', struct('lower', 3, 'upper', 8), ...
    'decay_rate_range', struct('lower', 0.1, 'upper', 1));
configs{end+1} = exponentially_decreasing_signal;

%%
exponentially_increasing_signal = struct(...
    'name', 'exponentially_increasing', ...
    'stepSize' , .1, ...    
    'timeHorizon', timeHorizon, ...
    'value_range', struct('lower', 0, 'upper', 10),...
    'min_amplitude', struct('lower', 3, 'upper', 8), ...
    'decay_rate_range', struct('lower', 0.1, 'upper', 1));
configs{end+1} = exponentially_increasing_signal;

%%
numPeriods = 5; period = timeHorizon/numPeriods;
midFreq = 2*pi/period; freqVariation = 0.2;
lFreq = midFreq*(1-freqVariation); % freq is in rad/sec
uFreq = midFreq*(1+freqVariation);

sinusoid_signal = struct(...
    'name', 'sinusoid', ...
    'stepSize' , .01, ...
    'timeHorizon', timeHorizon, ...
    'amplitude', struct('lower', 2, 'upper', 3),...
    'base_value', struct('lower', 0, 'upper', 2), ...
    'frequency_range', struct('lower', lFreq, 'upper', uFreq)); 
configs{end+1} = sinusoid_signal;

%%
numPeriods = 5; period = timeHorizon/numPeriods;
midFreq = 2*pi/period; freqVariation = 0.2;
lFreq = midFreq*(1-freqVariation); % freq is in rad/sec
uFreq = midFreq*(1+freqVariation);
diverging_sinusoid_signal = struct(...
    'name', 'diverging_sinusoid', ...
    'stepSize' , .01, ...
    'timeHorizon', timeHorizon, ...
    'amplitude', struct('lower', 2, 'upper', 3),...
    'base_value', struct('lower', 0, 'upper', 2), ...
    'frequency_range', struct('lower', lFreq, 'upper', uFreq), ...
    'decay_rate_range', struct('lower', 1e-2, 'upper', 1e-1));
configs{end+1} = diverging_sinusoid_signal;


%%
numPeriods = 5; period = timeHorizon/numPeriods;
midFreq = 2*pi/period; freqVariation = 0.2;
lFreq = midFreq*(1-freqVariation); % freq is in rad/sec
uFreq = midFreq*(1+freqVariation);
decaying_sinusoid_signal = struct(...
    'name', 'decaying_sinusoid', ...
    'stepSize' , .01, ...
    'timeHorizon', timeHorizon, ...
    'amplitude', struct('lower', 2, 'upper', 3),...
    'base_value', struct('lower', 0, 'upper', 2), ...
    'frequency_range', struct('lower', lFreq, 'upper', uFreq), ...
    'decay_rate_range', struct('lower', 1e-1, 'upper', 5e-1));
configs{end+1} = decaying_sinusoid_signal;

%%
spike_signal = struct(...
    'name', 'spike', ...
    'stepSize' , 5e-2, ...
    'timeHorizon', timeHorizon, ...
    'spike_amplitude_range', struct('lower', 1, 'upper', 2),...
    'spike_base_range', struct('lower', 0.5, 'upper', 0.6), ...
    'spike_width_range', struct('lower', 5e-2, 'upper', 1e-1),...
    'spike_time', struct('lower', 3, 'upper', 5));
configs{end+1} = spike_signal;

%%
valley_signal = struct(...
    'name', 'valley', ...
    'stepSize' , 5e-2, ...
    'timeHorizon', timeHorizon, ...
    'spike_amplitude_range', struct('lower', 1, 'upper', 2),...
    'spike_base_range', struct('lower', 0.5, 'upper', 0.6), ...
    'spike_width_range', struct('lower', 5e-2, 'upper', 1e-1),...
    'spike_time', struct('lower', 3, 'upper', 5));
configs{end+1} = valley_signal;

%%
% the following block of code is to just get spikes on increasing
% exponentials that appear reasonable. of course, you can get crazier
% spikes on crazier exponentials (or any other signal) by directly 
% calling the generator for spike_on_signal
v_lo = 0; v_hi = 10;
mean_amp = (v_hi-v_lo)/2; amp_variation = 0.1;
amp_lo = mean_amp * (1 - amp_variation);
amp_hi = mean_amp * (1 + amp_variation);
mean_lambda = 0.2; lambda_variation = 0.1;
lambda_lo = mean_lambda * (1 - lambda_variation);
lambda_hi = mean_lambda * (1 + lambda_variation);
mean_spike_time = log(2)/mean_lambda; spike_time_variation = 0.1;
stime_lo = (1 - spike_time_variation)*mean_spike_time;
stime_hi = (1 + spike_time_variation)*mean_spike_time;
sAmp_lo = 0.05*mean_amp;
sAmp_hi = 0.15*mean_amp;
number = 50; timeHorizon = 10;
spike_on_signal_signal = struct(...
    'name', 'spike_on_signal', ...
    'stepSize', 1e-2, ...
    'timeHorizon', timeHorizon, ...
    'baseName', 'exponentially_increasing', ...
    'value_range', struct('lower', v_lo, 'upper', v_hi), ...
    'min_amplitude', struct('lower', amp_lo, 'upper', amp_hi), ...
    'decay_rate_range', struct('lower', lambda_lo, 'upper', lambda_hi), ...
    'spikeName', 'spike', ...
    'spike_amplitude_range', struct('lower', sAmp_lo, 'upper', sAmp_hi), ...
    'spike_base_range', struct('lower', 0, 'upper', 0), ...
    'spike_width_range', struct('lower', 5e-3,'upper', 1e-2), ...
    'spike_time', struct('lower', stime_lo, 'upper', stime_hi));
configs{end+1} = spike_on_signal_signal;


%%
pulse_train_signal = struct(...
    'name', 'pulse_train', ...
    'stepSize', 5e-1, ...
    'timeHorizon', timeHorizon, ...
    'base_value', struct('lower', 0, 'upper', 5), ...
    'amplitude', struct('lower', 10, 'upper', 15), ...
    'duty_cycle', struct('lower', 0.3, 'upper', 0.6), ...
    'period', struct('lower', 15, 'upper', 20));
configs{end+1} = pulse_train_signal;

%%
numPeriods = 5; period = timeHorizon/numPeriods;
midFreq = 2*pi/period; freqVariation = 0.2;
lFreq = midFreq*(1-freqVariation); % freq is in rad/sec
uFreq = midFreq*(1+freqVariation);
hunting_signal = struct(...
    'name', 'hunting', ...
    'stepSize' , .01, ...
    'timeHorizon', timeHorizon, ...
    'amplitude', struct('lower', 2, 'upper', 2.5),...
    'base_value', struct('lower', -1, 'upper', 1), ...
    'frequency_range', struct('lower', lFreq, 'upper', uFreq));
configs{end+1} = hunting_signal;

%%
numPeriods = 30; period = timeHorizon/numPeriods;
midFreq = 2*pi/period; freqVariation = 0.2;
lFreq = midFreq*(1-freqVariation); % freq is in rad/sec
uFreq = midFreq*(1+freqVariation);
time_restricted_hunting_signal = struct(...
    'name', 'time_restricted_hunting', ...
    'stepSize' , 1e-2, ...
    'timeHorizon', timeHorizon, ...
    'time_range', struct('lower', 3, 'upper', 8), ...
    'min_duration', struct('lower', 2, 'upper', 3), ...
    'amplitude', struct('lower', 0.5, 'upper', 1),...
    'base_value', struct('lower', 0, 'upper', 10), ...
    'frequency_range', struct('lower', lFreq, 'upper', uFreq));

configs{end+1} = time_restricted_hunting_signal;

%%
numPeriods = 40; period = timeHorizon/numPeriods;
midFreq = 2*pi/period; freqVariation = 0.1;
lFreq = midFreq*(1-freqVariation); % freq is in rad/sec
uFreq = midFreq*(1+freqVariation);
hunting_along_signal_signal = struct(...
    'name', 'hunting_along_signal', ...
    'stepSize' , 1e-2, ...
    'timeHorizon', timeHorizon, ...    
    'baseName', 'exponentially_decreasing',...
    'value_range', struct('lower', 0, 'upper', 10),...
    'min_amplitude', struct('lower', 6, 'upper', 7), ...    
    'decay_rate_range', struct('lower', 0.1, 'upper', 1), ...
    'time_range', struct('lower', 2, 'upper', 5), ...
    'min_duration', struct('lower', 0, 'upper', 1), ...           
    'amplitude', struct('lower', 0.3, 'upper', 0.4),...
    'base_value', struct('lower', 0, 'upper', 0), ...
    'frequency_range', struct('lower', lFreq, 'upper', uFreq));
configs{end+1} = hunting_along_signal_signal;

%%
numPeriods = 30; period = timeHorizon/numPeriods;
midFreq = 2*pi/period; freqVariation = 0.2;
lFreq = midFreq*(1-freqVariation); % freq is in rad/sec
uFreq = midFreq*(1+freqVariation);
hunting_after_edge_signal = struct(...
    'name', 'hunting_after_edge', ...
    'stepSize' , 1e-2, ...
    'timeHorizon', timeHorizon, ...    
    'edgeName', 'rising_edge',...
    'value_range', struct('lower', 0, 'upper', 5),...
    'min_amplitude', struct('lower', 4, 'upper', 5), ...
    'edge_time', struct('lower', 2, 'upper', 5),...    
    'amplitude', struct('lower', 0.3, 'upper', 0.4),...
    'base_value', struct('lower', 0, 'upper', 0), ...
    'frequency_range', struct('lower', lFreq, 'upper', uFreq));
configs{end+1} = hunting_after_edge_signal;

%%
overshoot_signal = struct(...
    'name', 'overshoot', ...
    'stepSize' , 1e-2, ...
    'timeHorizon', timeHorizon, ...    
    'edgeName', 'rising_edge',...
    'value_range', struct('lower', 0, 'upper', 10),...
    'min_amplitude', struct('lower', 3, 'upper', 9), ...    
    'edge_time', struct('lower', 2, 'upper', 5),...    
    'omega', struct('lower', 1.5*pi, 'upper', 2*pi));
configs{end+1} = overshoot_signal;

%%
undershoot_signal = struct(...
    'name', 'undershoot', ...
    'stepSize' , 1e-2, ...
    'timeHorizon', timeHorizon, ...    
    'edgeName', 'rising_edge',...
    'value_range', struct('lower', 0, 'upper', 10),...
    'min_amplitude', struct('lower', 3, 'upper', 9), ...    
    'edge_time', struct('lower', 2, 'upper', 5),...    
    'omega', struct('lower', 1.5*pi, 'upper', 2*pi));
configs{end+1} = undershoot_signal;

%%
second_order_step_response_signal = struct(...
    'name', 'underdamped', ...
    'stepSize' , 1e-2, ...
    'timeHorizon', timeHorizon, ...            
    'step_amplitude', struct('lower', 1, 'upper', 1), ...
    'step_time', struct('lower', 2, 'upper', 2),...    
    'omega', struct('lower', pi/3, 'upper', pi/2), ...
    'gain', struct('lower', 2, 'upper', 5));
configs{end+1} = second_order_step_response_signal;

%%
ramp_signal = struct(...
    'name', 'ramp', ...
    'stepSize' , 1e-2, ...
    'timeHorizon', timeHorizon, ...  
    'value_range', struct('lower', 0, 'upper', 10), ...
    'min_amplitude', struct('lower', 3, 'upper', 5),...
    'ramp_slope', struct('lower', 0.1, 'upper', 8), ...
    'ramp_start_time', struct('lower', 1, 'upper', 3));
configs{end+1} = ramp_signal;

%%
sawtooth_signal = struct(...
    'name', 'sawtooth', ...
    'stepSize' , 1e-2, ...
    'timeHorizon', timeHorizon, ...  
    'value_range', struct('lower', 0, 'upper', 10), ...
    'min_amplitude', struct('lower', 3, 'upper', 5),...
    'width_range', struct('lower', 0, 'upper', .1), ...
    'period_range', struct('lower', 3, 'upper', 5), ...
    'offset_range', struct('lower',0, 'upper',1));
configs{end+1} = sawtooth_signal;

%%
timed_causal_signal = struct(...
    'name', 'timed_causal', ...
    'stepSize' , 0.2, ...
    'numCp', 21, ...
    'timeHorizon', timeHorizon, ...    
    'time_diff', struct('lower', 1, 'upper', 2));
configs{end+1} = timed_causal_signal;
